/* Copyright (c) 2023 The ZMK Contributors
 * SPDX-License-Identifier: MIT */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define L0 0
#define L1_SYM 1
#define L2_ARR 2
#define L3_FKEY 3

#define combo_timeout 30
#define combo_timeout_long 60
#define combo_global_quick_tap 150
#define combo_global_quick_tap_long 300



/ {
    //combos {
    //    compatible = "zmk,combos";
    //    combo_L2 {
    //        timeout-ms = <combo_timeout>;
    //        key-positions = <30 43>;
    //        //layers = <BASE WIN NAV NUM>;
    //        bindings = <&mo L2>;
    //    };
    //    combo_L3 {
    //        timeout-ms = <combo_timeout>;
    //        key-positions = <43 44>;
    //        //layers = <BASE WIN NAV NUM>;
    //        bindings = <&mo L3>;
    //    };
    //};

    behaviors {
        round: round {
            compatible = "zmk,behavior-mod-morph";
            label = "round";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        square: square {
            compatible = "zmk,behavior-mod-morph";
            label = "square";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        curly: curly {
            compatible = "zmk,behavior-mod-morph";
            label = "curly";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        angled: angled {
            compatible = "zmk,behavior-mod-morph";
            label = "angled";
            #binding-cells = <0>;
            bindings = <&kp LT>, <&kp GT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bslash_ex: bslash_ex {
            compatible = "zmk,behavior-mod-morph";
            label = "bslash_ex";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            label = "slash";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Double symbols
        com_qmark: com_qmark { // , !
            compatible = "zmk,behavior-mod-morph";
            label = "com_qmark";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_excl: dot_excl { // . !
            compatible = "zmk,behavior-mod-morph";
            label = "dot_excl";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        qmark: qmark { // ? !
            compatible = "zmk,behavior-mod-morph";
            label = "qmark";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        money: money { // £ $
            compatible = "zmk,behavior-mod-morph";
            label = "money";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp POUND>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bool: bool { // & |
            compatible = "zmk,behavior-mod-morph";
            label = "bool";
            #binding-cells = <0>;
            bindings = <&kp AMPERSAND>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hash: hash { // # ~
            compatible = "zmk,behavior-mod-morph";
            label = "hash";
            #binding-cells = <0>;
            bindings = <&kp HASH>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        quo: quo {
            compatible = "zmk,behavior-mod-morph";
            label = "quotes";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp AT_SIGN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at_prc: at_prc { // @ %
            compatible = "zmk,behavior-mod-morph";
            label = "at_prc";
            #binding-cells = <0>;
            bindings = <&kp PERCENT>, <&kp DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        hard_dqt: hard_dqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N3 &kp KP_N4>
                , <&macro_release &kp LALT>
                ;
            label = "HARD_DQT";
        };
        hard_money: hard_money {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N3>
                , <&macro_release &kp LALT>
                ;
            label = "HARD_MONEY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

L0 {
bindings = <
//╭─0─────────┬─1─────────┬─2─────────┬─3─────────┬─4─────────┬─5─────────╮            LETTERS + BASE CTRL KEYS             ╭─6─────────┬─7─────────┬─8─────────┬─9─────────┬─10────────┬─11────────╮
  &kp   ESC   &kp   Q     &kp   W     &kp   E     &kp   R     &kp   T                                                       &kp    Y    &kp    U    &kp    I    &kp    O    &kp    P    &kp  DEL
//├─12────────┼─13────────┼─14────────┼─15────────┼─16────────┼─17────────┤                                                 ├─18────────┼─19────────┼─20────────┼─21────────┼─22─ ; : ──┼─23─  _  ──┤
  &kp   TAB   &kp   A     &kp   S     &kp   D     &kp   F     &kp   G                                                       &kp    H    &kp    J    &kp    K    &kp    L    &kp   SEMI  &kp UNDER
//├─24────────┼─25────────┼─26────────┼─27────────┼─28────────┼─29────────┼─30────────┬─31────────╮ ╭─32────────┬─33────────┼─34────────┼─35────────┼─36─ , ? ──┼─37─ . ! ──┼─38─ ' " ──┼─39─ % @ ──┤
  &kp  LCTRL  &kp   Z     &kp   X     &kp   C     &kp   V     &kp   B     &none       &none         &none       &to  L0     &kp    N    &kp    M    &com_qmark  &dot_excl   &quo        &at_prc
//╰───────────┴───────────┴───────────┼─40────────┼─41───────┬┼┬42────────┼─43────────┬─44────────┤ ├─45────────┬─46────────┼─47───────┬┼┬48────────┼─49────────┼───────────┴───────────┴───────────╯
                                      &kp  LGUI   &kp  LALT   &kp  LSHFT  &mo L1_SYM  &mo L2_ARR    &mo L3_FKEY &kp  BSPC   &kp SPACE   &kp   RET   &kp RALT
//                                    ╰───────────┴──────────┴┴┴──────────┴───────────┴───────────╯ ╰───────────┴───────────┴──────────┴┴┴──────────┴───────────╯
>;
sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
};

L1_SYM {
bindings = <
//╭───────────┬───  [  ───┬───  ]  ───┬───  {  ───┬───  }  ───┬──── ~ ────╮            SYMBOLS + NUMERIC + CALC             ╭──── + ────┬───────────┬───────────┬───────────┬───────────┬───────────╮
  &trans      &kp  LBKT   &kp  RBKT   &kp  LBRC   &kp  RBRC   &kp TILDE2                                                    &kp PLUS    &kp   N7   &kp   N8     &kp   N9    &kp  FSLH   &trans
//├───────────┼───  <  ───┼───  >  ───┼───  (  ───┼───  )  ───┼──── # ────┤                                                 ├───  =  ───┼───────────┼───────────┼───────────┼──── * ────┼───────────┤
  &trans      &kp  LT     &kp  GT     &kp  LPAR   &kp  RPAR   &kp NUHS                                                      &kp EQUAL   &kp   N4   &kp   N5     &kp   N6    &kp  STAR   &trans
//├───────────┼──── | ────┼──── & ────┼───  /  ───┼───  \  ───┼───     ───┼───────────┬───────────╮ ╭───────────┬───────────┼───  -  ───┼───────────┼───────────┼───────────┼──── ^ ────┼───────────┤
  &trans      &kp PIPE2   &kp AMPS    &kp  FSLH   &kp  NUBS   &none       &trans      &trans        &trans      &trans      &kp MINUS   &kp   N1    &kp  N2     &kp   N3    &kp  CARET  &trans
//╰───────────┴───────────┴───────────┼───────────┼──────────┬┼┬──────────┼───────────┬───────────┤ ├───────────┬───────────┼──────────┬┼┬──────────┼───────────┼───────────┴───────────┴───────────╯
                                      &trans      &trans      &trans      &trans      &trans        &trans      &trans      &trans      &trans      &kp  N0
//                                    ╰───────────┴──────────┴┴┴──────────┴───────────┴───────────╯ ╰───────────┴───────────┴──────────┴┴┴──────────┴───────────╯
>;
sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp PG_UP PG_DN>;
};

L2_ARR {
bindings = <
//╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮               ARROWS + MEDIA                    ╭──── ⏯ ────┬─── MUTE ──┬── VOL - ──┬── VOL + ──┬─── << ────┬─── >> ────╮
  &trans      &kp HOME    &kp END     &kp PG_DN   &kp PG_UP   &none                                                         &kp C_PP    &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV  &kp C_NEXT
//├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤                                                 ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
  &trans      &kp CAPS    &kp K_CMENU &kp INSERT  &kp PSCRN   &none                                                         &none       &kp  LEFT   &kp   UP    &kp  DOWN   &kp  RIGHT  &trans
//├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┬───────────╮ ╭───────────┬───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
  &trans      &kp KP_NUM  &kp GRAVE   &kp POUND   &kp DOLLAR  &none       &trans      &trans        &trans      &trans      &none     &kp C_BRI_UP &kp C_BRI_DN &none       &none       &trans
//╰───────────┴───────────┴───────────┼───────────┼──────────┬┼┬──────────┼───────────┬───────────┤ ├───────────┬───────────┼──────────┬┼┬──────────┼───────────┼───────────┴───────────┴───────────╯
                                      &trans      &trans      &trans      &trans      &trans        &trans      &trans      &trans      &trans      &trans
//                                    ╰───────────┴──────────┴┴┴──────────┴───────────┴───────────╯ ╰───────────┴───────────┴──────────┴┴┴──────────┴───────────╯
>;
sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_BRI_INC C_BRI_DEC>;
};

L3_FKEY {
bindings = <
//╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮               F Keys                            ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮
  &trans      &bt BT_CLR  &none       &none       &none       &sys_reset                                                    &none       &kp   F7    &kp   F8    &kp   F9    &kp   F12   &trans
//├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤                                                 ├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
  &none       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                              &sys_reset  &kp   F4    &kp   F5    &kp   F6    &kp   F11   &trans
//├───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┬───────────╮ ╭───────────┬───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤
  &trans      &none       &none       &none       &none       &bootloader &trans      &trans        &trans      &trans      &bootloader &kp   F1    &kp   F2    &kp   F3    &kp   F10   &trans
//╰───────────┴───────────┴───────────┼───────────┼──────────┬┼┬──────────┼───────────┬───────────┤ ├───────────┬───────────┼──────────┬┼┬──────────┼───────────┼───────────┴───────────┴───────────╯
                                      &trans      &trans      &trans      &trans      &trans        &trans      &trans      &trans      &trans      &trans
//                                    ╰───────────┴──────────┴┴┴──────────┴───────────┴───────────╯ ╰───────────┴───────────┴──────────┴┴┴──────────┴───────────╯
>;
sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp LEFT RIGHT>;
};

    };
};
